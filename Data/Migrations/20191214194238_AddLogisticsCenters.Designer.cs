// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.web.Data;

namespace app.web.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20191214194238_AddLogisticsCenters")]
    partial class AddLogisticsCenters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("app.web.Models.Entities.LogisticsCenter", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<uint>("PlaceId");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("LogisticsCenters");
                });

            modelBuilder.Entity("app.web.Models.Entities.Place", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("app.web.Models.Entities.Road", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Distance");

                    b.Property<uint>("Place1Id");

                    b.Property<uint>("Place2Id");

                    b.HasKey("Id");

                    b.HasIndex("Place1Id");

                    b.HasIndex("Place2Id");

                    b.ToTable("Roads");
                });

            modelBuilder.Entity("app.web.Models.Entities.LogisticsCenter", b =>
                {
                    b.HasOne("app.web.Models.Entities.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("app.web.Models.Entities.Road", b =>
                {
                    b.HasOne("app.web.Models.Entities.Place", "Place1")
                        .WithMany()
                        .HasForeignKey("Place1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("app.web.Models.Entities.Place", "Place2")
                        .WithMany()
                        .HasForeignKey("Place2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
