@model IEnumerable<app.web.Models.Entities.Road>

@{
    ViewData["Title"] = "Home Page";
}

<figure class="highcharts-figure">
    <div id="container"></div>
</figure>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/networkgraph.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script>
    Highcharts.addEvent(
        Highcharts.Series,
        'afterSetOptions',
        function (e) {
            var colors = Highcharts.getOptions().colors,
                i = 0,
                nodes = {};

            if (
                this instanceof Highcharts.seriesTypes.networkgraph &&
                e.options.id === 'lang-tree'
            ) {
                e.options.data.forEach(function (link) {

                    if (link[0] === 'Proto Indo-European') {
                        nodes['Proto Indo-European'] = {
                            id: 'Proto Indo-European',
                            marker: {
                                radius: 20
                            }
                        };
                        nodes[link[1]] = {
                            id: link[1],
                            marker: {
                                radius: 10
                            },
                            color: colors[i++]
                        };
                    } else if (nodes[link[0]] && nodes[link[0]].color) {
                        nodes[link[1]] = {
                            id: link[1],
                            color: nodes[link[0]].color
                        };
                    }
                });

                e.options.nodes = Object.keys(nodes).map(function (id) {
                    return nodes[id];
                });
            }
        }
    );

    var data = @Json.Serialize(Model);
    var roadsData = [];
    for (i = 0; i < data.length; i++) {
        roadsData[i] = [data[i].place1.name, data[i].place2.name];
    }
    
    Highcharts.chart('container', {
        chart: {
            type: 'networkgraph',
            height: '100%'
        },
        title: {
            text: 'The roads network'
        },
        subtitle: {
            text: 'A Force-Directed Network Graph in Highcharts'
        },
        plotOptions: {
            networkgraph: {
                keys: ['from', 'to'],
                layoutAlgorithm: {
                    enableSimulation: true,
                    friction: -0.9
                }
            }
        },
        series: [{
            dataLabels: {
                enabled: true,
                linkFormat: ''
            },
            id: 'lang-tree',
            data: roadsData
        }]
    });

</script>
    